{"version":3,"sources":["webpack://MPADiff/webpack/universalModuleDefinition","webpack://MPADiff/webpack/bootstrap","webpack://MPADiff/webpack/runtime/define property getters","webpack://MPADiff/webpack/runtime/hasOwnProperty shorthand","webpack://MPADiff/webpack/runtime/make namespace object","webpack://MPADiff/./src/lib/utils/LinksObserver.ts","webpack://MPADiff/./src/lib/utils/network.ts","webpack://MPADiff/./src/lib/utils/URL.ts","webpack://MPADiff/./src/lib/index.ts","webpack://MPADiff/./src/lib/utils/common.ts"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","LinksObserver","this","defaultDelay","callback","delay","links","length","linksHTML","seenLinks","undefined","outerHTML","Array","from","document","getElementsByTagName","didChange","map","link","window","setTimeout","timedHandler","setDelay","setCallback","urls","isHrefSameHost","href","url","startsWith","getHost","location","origin","isHrefSameHostAbsolute","split","pop","shift","MPADiff","observer","init","handleLinksChange","bind","onpopstate","handlePopState","MPADiffInstance","instance","e","console","log","updateHTML","state","html","innerHTML","title","history","pushState","didFetch","errored","promise","fetch","then","resp","text","error","addEventListener","preventDefault","Error","Promise","resolve","getURLContent","updateBrowserHistory","startIdx","search","endIdx","slice","getTitleFromHtml","getAttribute","addListener"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MPADiff\"] = factory();\n\telse\n\t\troot[\"MPADiff\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","type CallbackType = (links: HTMLAnchorElement[]) => void;\n\nexport class LinksObserver {\n  private callback: CallbackType = () => {};\n  private defaultDelay = 300;\n  private delay: number = this.defaultDelay;\n  private linksHTML: string[] = [];\n\n  setCallback(callback: CallbackType) {\n    this.callback = callback;\n  }\n\n  setDelay(delay: number) {\n    this.delay = delay;\n    this.defaultDelay = delay;\n  }\n\n  private didChange(links: HTMLAnchorElement[]) {\n    if (links.length !== this.linksHTML.length) return true;\n    const seenLinks: Record<string, number> = {}; //link => count\n\n    for (const linkHTML of this.linksHTML) {\n      seenLinks[linkHTML] = 0;\n    }\n\n    for (const link of links) {\n      const countSeen = seenLinks[link.outerHTML];\n      if (countSeen === undefined) return true;\n    }\n  }\n\n  private timedHandler() {\n    const links = Array.from(document.getElementsByTagName(\"a\"));\n    if (!this.didChange(links)) {\n      window.setTimeout(() => this.timedHandler(), this.delay);\n      return;\n    } else {\n      this.delay = this.defaultDelay;\n    }\n    this.linksHTML = links.map((link) => link.outerHTML);\n\n    this.callback(links);\n    window.setTimeout(() => this.timedHandler(), this.delay);\n  }\n\n  init(callback: CallbackType, delay = this.delay) {\n    this.setDelay(delay);\n    this.setCallback(callback);\n    this.timedHandler();\n  }\n}\n","type URLObject = {\n  didFetch: boolean;\n  html?: string;\n  promise?: Promise<string>;\n  errored: boolean;\n};\n\nconst urls: Record<string, URLObject> = {};\n\nexport function fetchURL(url: string) {\n  if (urls[url]) return;\n  urls[url] = {\n    didFetch: false,\n    errored: false,\n    promise: fetch(url)\n      .then((resp) => resp.text())\n      .then((html) => {\n        urls[url].didFetch = true;\n        urls[url].html = html;\n        return html;\n      })\n      .catch((error) => {\n        console.error(error);\n        urls[url].errored = true;\n        urls[url].didFetch = true;\n        return \"\";\n      }),\n  };\n}\n\nexport function getURLContent(url: string): Promise<string | undefined> {\n  if (!urls[url])\n    throw new Error(`Couldn't find url: ${url} in saved records!`);\n  return new Promise<string | undefined>((resolve) => {\n    if (urls[url].didFetch) resolve(urls[url].html);\n\n    resolve(urls[url].promise?.then(() => urls[url].html));\n  });\n}\n","function isAbsoluteURL(url: string) {\n  return (\n    url.startsWith(\"http\") || url.startsWith(\"https\") || url.startsWith(\"//\")\n  );\n}\n\nexport function isHrefSameHost(href: string): boolean {\n  if (isAbsoluteURL(href)) return isHrefSameHostAbsolute(href);\n  return true;\n}\n\nfunction getHost(href: string) {\n  return href.split(\"//\").pop().split(\"/\").shift();\n}\n\nfunction isHrefSameHostAbsolute(href: string): boolean {\n  return getHost(href) === getHost(window.location.origin);\n}\n\nexport function getPath(href: string): string {\n  return href;\n}\n","import { getTitleFromHtml } from \"./utils/common\";\nimport { LinksObserver } from \"./utils/LinksObserver\";\nimport { fetchURL, getURLContent } from \"./utils/network\";\nimport { isHrefSameHost } from \"./utils/URL\";\n\nconst MPA_ATTRIBUTE_EVENT_LISTENER = \"data-mpa-diff-added-listener\";\nclass MPADiff {\n  private observer = new LinksObserver();\n  private static instance: MPADiff | undefined = undefined;\n  private constructor() {\n    this.observer.init(this.handleLinksChange.bind(this));\n    window.onpopstate = this.handlePopState.bind(this);\n  }\n\n  static getInstance(): MPADiff {\n    if ((window as any).MPADiffInstance) return (window as any).MPADiffInstance;\n    if (this.instance) return this.instance;\n    this.instance = new MPADiff();\n    (window as any).MPADiffInstance = this.instance;\n    return this.instance;\n  }\n\n  private handlePopState(e: PopStateEvent) {\n    console.log(\"fuck me!\");\n    this.updateHTML(e.state.html);\n  }\n\n  private updateHTML(html: string) {\n    document.getElementsByTagName('html')[0].innerHTML = html;\n  }\n\n  private updateBrowserHistory(html: string, href: string, title: string) {\n    history.pushState({ html }, title, href);\n  }\n\n  private addListener(link: HTMLAnchorElement) {\n    console.log(link, \"aa\");\n    fetchURL(link.href);\n    link.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n\n      getURLContent(link.href).then((html) => {\n        console.log(html);\n        this.updateHTML(html);\n        this.updateBrowserHistory(html, link.href, getTitleFromHtml(html));\n      });\n\n      return false;\n    });\n  }\n\n  private handleLinksChange(links: HTMLAnchorElement[]) {\n    for (const link of links) {\n      if (link.getAttribute(MPA_ATTRIBUTE_EVENT_LISTENER) === \"true\") continue;\n      if (!isHrefSameHost(link.href)) continue;\n      this.addListener(link);\n    }\n  }\n}\nexport default MPADiff;\n","export function getTitleFromHtml(html: string): string {\n  const startIdx = html.search(/<title>.*<\\/title>/);\n  if (startIdx < 0) return \"\";\n  const endIdx = html.search(/<\\/title>/);\n  if (endIdx < 0) return \"\";\n  return html.slice(startIdx, endIdx).slice(\"<title>\".length);\n}\n"],"sourceRoot":""}